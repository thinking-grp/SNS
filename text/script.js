const firebaseConfig={apiKey:"AIzaSyCCw9vbQuF9CJzyvhfy__UDIGq9SQO0KA8",authDomain:"thinking-sns.firebaseapp.com",projectId:"thinking-sns",storageBucket:"thinking-sns.firebasestorage.app",messagingSenderId:"133464509665",appId:"1:133464509665:web:c0b8769832c1d56ef9bba0",measurementId:"G-WZCMJ4R2TF"};firebase.initializeApp(firebaseConfig);const db=firebase.database();let currentSessionId=null;let textboxCount=0;let updateTimeout=null;let currentTextValues={};let activeTextbox=null;let updateInterval=null;let textboxColors={};async function updateTextboxColor(index,type,color){const textbox=document.getElementById(`text${index}`);if(textbox){if(type==='bg'){textbox.style.backgroundColor=color;textboxColors[`bg${index}`]=color}else{textbox.style.color=color;textboxColors[`text${index}`]=color};if(currentSessionId){await db.ref(`sessions/${currentSessionId}/colors`).update({[`bg${index}`]:textboxColors[`bg${index}`],[`text${index}`]:textboxColors[`text${index}`]})}}};async function createSession(){const sessionId=document.getElementById('createId').value;const count=parseInt(document.getElementById('participantCount').value);if(!sessionId)return;const sessionRef=db.ref(`sessions/${sessionId}`);const snapshot=await sessionRef.once('value');if(snapshot.exists()){dialog2Headline.textContent='残念!';dialog2Content.textContent='そのIDは既に使われています。他のIDにしてください。';await dialog2.show();return};const textboxes={};const colors={};for(let i=0;i<count;i++){textboxes[`text${i}`]='';currentTextValues[`text${i}`]='';colors[`bg${i}`]='#ffffff';colors[`text${i}`]='#000000'};await sessionRef.set({...textboxes,colors});joinSession(sessionId,count)};function setupTextboxes(){const container=document.getElementById('textboxContainer');container.innerHTML='';for(let i=0;i<textboxCount;i++){const group=document.createElement('div');group.className='textbox-group';const colorControls=document.createElement('div');colorControls.className='color-controls';const bgLabel=document.createElement('span');bgLabel.className='color-label';bgLabel.textContent='背景色:';const bgColor=document.createElement('input');bgColor.type='color';bgColor.value=textboxColors[`bg${i}`]||'#ffffff';bgColor.addEventListener('change',(e)=>updateTextboxColor(i,'bg',e.target.value));const textLabel=document.createElement('span');textLabel.className='color-label';textLabel.textContent='文字色:';const textColor=document.createElement('input');textColor.type='color';textColor.value=textboxColors[`text${i}`]||'#000000';textColor.addEventListener('change',(e)=>updateTextboxColor(i,'text',e.target.value));colorControls.appendChild(bgLabel);colorControls.appendChild(bgColor);colorControls.appendChild(textLabel);colorControls.appendChild(textColor);const textbox=document.createElement('textarea');textbox.className='text-box';textbox.id=`text${i}`;textbox.placeholder=`テキストボックス ${i + 1}`;textbox.value=currentTextValues[`text${i}`]||'';textbox.style.backgroundColor=textboxColors[`bg${i}`]||'#ffffff';textbox.style.color=textboxColors[`text${i}`]||'#000000';textbox.addEventListener('focus',function(){activeTextbox=`text${i}`});textbox.addEventListener('blur',function(){activeTextbox=null});textbox.addEventListener('input',function(){clearTimeout(updateTimeout);updateTimeout=setTimeout(()=>updateText(i,textbox.value),200)});group.appendChild(colorControls);group.appendChild(textbox);container.appendChild(group)}};async function deleteSession(){if(!currentSessionId)return;if(confirm('このトークルームを削除してもよろしいですか？\n全ての参加者が退出されます。')){const sessionRef=db.ref(`sessions/${currentSessionId}`);await sessionRef.remove();leaveSession()}};async function joinSession(presetId=null){const sessionId=presetId||document.getElementById('joinId').value;if(!sessionId)return;const sessionRef=db.ref(`sessions/${sessionId}`);const snapshot=await sessionRef.once('value');if(!snapshot.exists()){dialog2Headline.textContent='何かが違う';dialog2Content.textContent='そのIDは存在しません。';await dialog2.show();return};currentSessionId=sessionId;const data=snapshot.val();textboxCount=Object.keys(data).filter(key=>key.startsWith('text')).length;for(let i=0;i<textboxCount;i++){currentTextValues[`text${i}`]=data[`text${i}`]||''};if(data.colors){for(let i=0;i<textboxCount;i++){textboxColors[`bg${i}`]=data.colors[`bg${i}`]||'#ffffff';textboxColors[`text${i}`]=data.colors[`text${i}`]||'#000000'}};document.getElementById('sessionTitle').textContent=sessionId;document.getElementById('participantInfo').textContent=`参加人数：${textboxCount}人`;document.getElementById('initSection').style.display='none';document.getElementById('chatSection').style.display='flex';setupTextboxes();startRealtimeUpdates()};let colorUpdateInterval=null;function startRealtimeUpdates(){if(updateInterval){clearInterval(updateInterval)};if(colorUpdateInterval){clearInterval(colorUpdateInterval)};updateInterval=setInterval(async()=>{if(!currentSessionId)return;const sessionRef=db.ref(`sessions/${currentSessionId}`);const snapshot=await sessionRef.once('value');if(!snapshot.exists()){dialog2Headline.textContent='トークルームは消えた';dialog2Content.textContent='誰かによってトークルームが削除されたため参加できません。';await dialog2.show();leaveSession();return};const data=snapshot.val();for(let i=0;i<textboxCount;i++){const textboxId=`text${i}`;const textbox=document.getElementById(textboxId);const newValue=data[textboxId]||'';if(textboxId===activeTextbox)continue;if(textbox&&newValue!==currentTextValues[textboxId]){currentTextValues[textboxId]=newValue;textbox.value=newValue;textbox.disabled=!0;setTimeout(()=>{if(textbox)textbox.disabled=!1},600)}}},1000);colorUpdateInterval=setInterval(async()=>{if(!currentSessionId)return;const colorsRef=db.ref(`sessions/${currentSessionId}/colors`);const snapshot=await colorsRef.once('value');if(snapshot.exists()){const colors=snapshot.val();for(let i=0;i<textboxCount;i++){const textbox=document.getElementById(`text${i}`);if(textbox){textbox.style.backgroundColor=colors[`bg${i}`]||'#ffffff';textbox.style.color=colors[`text${i}`]||'#000000'}}}},2000)};async function updateText(index,value){if(!currentSessionId)return;const textboxId=`text${index}`;currentTextValues[textboxId]=value;await db.ref(`sessions/${currentSessionId}/${textboxId}`).set(value)};function leaveSession(){if(currentSessionId){if(updateInterval){clearInterval(updateInterval)};if(colorUpdateInterval){clearInterval(colorUpdateInterval)};currentSessionId=null;currentTextValues={};activeTextbox=null;textboxColors={}};document.getElementById('initSection').style.display='block';document.getElementById('chatSection').style.display='none';document.getElementById('createError').style.display='none';document.getElementById('joinError').style.display='none'};async function fetchColors(){if(!currentSessionId)return;const sessionRef=db.ref(`sessions/${currentSessionId}/colors`);const snapshot=await sessionRef.once('value');if(snapshot.exists()){const colors=snapshot.val();for(let i=0;i<textboxCount;i++){const textbox=document.getElementById(`text${i}`);if(textbox){textbox.style.backgroundColor=colors[`bg${i}`]||'#ffffff';textbox.style.color=colors[`text${i}`]||'#000000'}}}};const dialog2=document.getElementById('dialog2');const dialog2Headline=dialog2.querySelector('div[slot="headline"]');const dialog2Content=dialog2.querySelector('form[slot="content"]');const dialog=document.getElementById('myDialog');openDialogButton.addEventListener('click',async()=>{await dialog.show()})
